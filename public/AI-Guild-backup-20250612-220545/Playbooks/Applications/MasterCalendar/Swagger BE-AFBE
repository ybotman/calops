# 📘 SwaggerBI-AFBE: Unified API Docs for TangoTiempo Backend

This repo manages **unified OpenAPI/Swagger documentation** across the legacy **Node Express API** and the new **Azure Functions** API, supporting the ongoing phased migration.

---

## 📌 Purpose

- Provide a **single source of truth** for the backend API documentation.
- Help internal developers, LLM agents, and testing frameworks locate and use the current endpoints.
- Serve a live Swagger UI that **merges both backends** into one OpenAPI document.

---

## 🗂 Repos in Use

### 1. `calendar-be`  
> Traditional Node.js + Express backend.  
> Location: `../calendar-be`

- Swagger served from: `http://localhost:3010/api-docs-json`
- Spec generated via `swagger-jsdoc`
- Route source: `./routes/*.js`

### 2. `calendar-be-af`  
> Azure Functions backend (new/partial migration).  
> Location: `../calendar-be-af`

- Swagger served from: `http://localhost:7071/api/swagger.json`
- Spec generated via `@azure/functions-openapi`
- Function source: `./src/functions/*.js`

---

## 📦 the Repo: `mastercalendar-swagger`

This project pulls, merges, and displays Swagger documentation from both backends via a single Swagger UI instance.

⸻

🧠 Guidance for LLM Agents
	•	All available backend endpoints (both Express and Azure Functions) are to be described in OpenAPI format.
	•	Swagger UI reads from:
./openapi/combined.json
	•	To understand any backend logic, refer to:
	•	calendar-be/routes/*.js (Express API logic and annotations)
	•	calendar-be-af/src/functions/*.js (Azure Function HTTP handlers)
	•	Use operation summaries and tags in the Swagger spec to understand which functions belong to which backend.

⸻

🔐 Production Security (recommended)
	•	Restrict /api-docs access to admin-only
	•	Optionally use Firebase Auth headers or IP restrictions

⸻

🧪 Future Enhancements
	•	Auto-regenerate docs on push via GitHub Actions
	•	Add diff check to flag mismatched operations between legacy and AF
	•	Tag routes by version or backend (x-backend: "Express" vs "AzureFunctions")

⸻
